name: Continuous Integration Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  front-pipeline:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Install project dependencies
        working-directory: ./front
        run: npm install

      - name: Build the app
        working-directory: ./front
        run: ionic build


  backend-pipeline:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install backend dependencies
        working-directory: ./back/flask
        run: |
          pip install -r requirement.txt

      - name: Lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and run Docker Compose
        working-directory: ./back
        run: |
          export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          export MYSQL_USER=${{ secrets.MYSQL_USER }}
          export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          docker compose -f docker-compose-dev.yml up -d

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push development image
        working-directory: ./back
        run: |
          docker compose -f docker-compose-dev.yml build api-flask
          docker tag back-api-flask gastoooon/macave_backend:dev
          docker push gastoooon/macave_backend:dev

      - name: Stop Docker Compose
        working-directory: ./back
        run: docker compose -f docker-compose-prod.yml down