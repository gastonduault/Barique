name: test Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 20s
          --health-timeout 50s
          --health-retries 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install backend dependencies
        working-directory: ./back/flask
        run: |
          pip install -r requirement.txt

      - name: Test with pytest
        working-directory: ./back/flask
        run: |
          pytest

      - name: Lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and run Docker Compose
        working-directory: ./back
        run: |
          export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          export MYSQL_USER=${{ secrets.MYSQL_USER }}
          export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          docker compose -f docker-compose-prod.yml up